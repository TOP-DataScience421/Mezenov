from pathlib import Path
from sys import path
from csv import reader
from csv import writer

class CountableNouns:
    """
    класс CountableNouns.
    предоставляет интерфейс для работы с файловой базой существительных.
    
    Поля класса:
        db_path: pathlib.Path - путь к файлу с базой существительных
        words: dict[str, tuple[str, str]]- соответствие между существительным в единственном числе и кортежем из двух словоформ/слов во множественном числе, согласующихся с числительными "два" и "пять"
        
    Атрибуты экземпляра отсутствуют.

    Методы:
    {class} pick() -> str
        принимает в качестве аргументов число и существительное для согласования в единственном числе, возвращает согласованное с переданным числом существительное
    
    {class} save_words() -> None
        запрашивает в stdin у пользователя два или три слова согласующихся с числительными, добавляет полученные значения в поле класса words и дописывает их в файл с базой существительных
    """
    
    # Абсолютный путь к файлу с хранящимиси сущесвтительными
    db_path = Path(path[0]) / 'words.csv'
    words = {}
    # Заполняем словарь words текущими существительными из файла
    with open(db_path, encoding = 'utf-8') as csvfile:
        linereader = reader(csvfile)
        for row in linereader:
            words[row[0]] = row[1], row[2]
    
    @classmethod
    def pick(cls, number: int, word: str) -> str:
        """
        Классовый метод.
        Принимает на вход число и существительное в единственном числе.
        Возвращает форму введенного существительного согласованную с введенным числом
        """
        
        # Если слова нет в словаре слов
        if not (word in cls.words.keys()):
            print(f'существительное "{word}" отсутствует в базе')
            # Вызываем метод save_words, чтобы добавить слово в словарь и в файл
            cls.save_words(word)
        else:
            # Если слово в словаре есть, выводим существительное соответствующее числительному по известному алгоритму
            if number % 10 == 1 and number % 100 != 11:
                return word
            elif number % 10 in range(2,5) and number %100 not in range(12,15):
                return (cls.words[word][0])
            else:
                return (cls.words[word][1])
        
    @classmethod
    def save_words(cls, word1: str = None) -> None:
        """
        Классовый метод.
        принимает на вход существительное в единственном числе, для занесения его в словарь и в файл базы данных существительных. Если такое существительное не было передано на вход, то запрашивает у пользователя его и два других вида этого же сущестувительного, согласующихся с оставшимися вариантами числительных
        """
        
        # Если слово в единственном числе is None, значит оно не было передано, определяем и его
        if word1 is None:
            word1 = input('введите слово, согласующееся с числительным "один": ')
        word2 = input('введите слово, согласующееся с числительным "два": ')
        word5 = input('введите слово, согласующееся с числительным "пять": ')
        
        # Добавляем новые введенные слова в словарь
        cls.words[word1] = word2, word5
       
        # Досохраняем новые введенные слова в файл words.csv
        with open(cls.db_path, 'a', encoding = 'utf-8') as csvfile:
            linewriter = writer(csvfile, lineterminator = '\n')
            linewriter.writerow([word1, word2, word5])
            
# Ручные тесты:
# 21:19:28 > python -i 4.py

# >>> CountableNouns.pick(21, 'заяц')
# существительное "заяц" отсутствует в базе
# введите слово, согласующееся с числительным "два": зайца
# введите слово, согласующееся с числительным "пять": зайцев

# >>> print(CountableNouns.db_path.read_text(encoding='utf-8'))
# год,года,лет
# месяц,месяца,месяцев
# день,дня,дней
# заяц,зайца,зайцев

# >>> CountableNouns.save_words()
# введите слово, согласующееся с числительным "один": попугай
# введите слово, согласующееся с числительным "два": попугая
# введите слово, согласующееся с числительным "пять": попугаев

# >>> print(CountableNouns.db_path.read_text(encoding='utf-8'))
# год,года,лет
# месяц,месяца,месяцев
# день,дня,дней
# заяц,зайца,зайцев
# попугай,попугая,попугаев

# >>> CountableNouns.pick(167, 'месяц')
# 'месяцев'
        
    