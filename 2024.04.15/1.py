e_mail = input('Введите название Вашей электронной почты: ')

#Вариант решения 1. Через один проход по всем символам введённого адреса и явный поиск необходимых аттрибутов адреса электронной почты, в т.ч. проверка на их последовательность и повторяемость: 

# spec_smbl_flag1 = spec_smbl_flag2 = False

# for char in e_mail:
    # #Поиск символа '@' в названии электронной почты
    # if char == '@':
        # #Если такого символа не было найдено раньше, поднимаем флаг
        # if not spec_smbl_flag1 and not spec_smbl_flag2:
            # spec_smbl_flag1 = True
        # #Если такой символ уже встречался в адресе, то опускаем флаг и прерываем цикл. Считаем 2 символа '@' в названии некорректным. Так же считаем некорректным, если '.' встретится раньше чем '@'.
        # elif spec_smbl_flag1 or spec_smbl_flag2:
            # spec_smbl_flag1 = spec_smbl_flag2 = False
            # break
    # #Поиск символа '.'. Символов '.' может быть несколько в названии почты, на кол-во не проверяем.       
    # if char == '.':
        # if spec_smbl_flag1:
            # spec_smbl_flag2 = True
        # else:
            # spec_smbl_flag1 = spec_smbl_flag2 = False
            # break
        
    # # print(char)
        
            
# #Если после завершения цикла, оба флага подняты в True, тогда считаем, что адрес корректный, иначе - нет
# if spec_smbl_flag1 and spec_smbl_flag2:
    # print('\nда')
# else:
    # print('\nнет')
    
#Пример вывода 1:

# Введите название Вашей электронной почты: 123@mail.ru.org

# да

#Пример вывода 2:
  
# Введите название Вашей электронной почты: 123.mail@rudfgfg.ru

# нет



#Вариант решения 2. Через строковые методы. Мне кажется значительно менее читаемым, чем вариант 1.

correct_email_flag = True

#Разделяем строку в кортеж на 3 элемента до '@', саму '@' и после '@'
separated_email = e_mail.partition('@')

#Если какая-либа строка в кортеже пустая, то адрес некорректный
if not separated_email[0] or not separated_email[1] or not separated_email[2]:
    correct_email_flag = False
#Если находим в первой половине адреса '.', то адрес некорректный
elif separated_email[0].find('.') >= 0:
    correct_email_flag = False
#Если не находим ни одной '.' во второй половине адреса, то адрес некорректный
elif separated_email[2].find('.') < 0:
    correct_email_flag = False
#Если находим еще '@' в какой-то части имени адреса, то адрес некорректный
elif separated_email[0].find('@') >= 0 or separated_email[2].find('@') >= 0:
    correct_email_flag = False
    
#Вывод решения о корректности адреса в консоль   
if correct_email_flag:
    print('\nда')
else:
    print('\nнет')
    
# Вариант вывода 1:

# Введите название Вашей электронной почты: 123@mail.ru

# да   

# Вариант вывода 2:

# Введите название Вашей электронной почты: 1@@mail.ru

# нет
    